#library "BD64ACS"
#include "zcommon.acs"

script "KickKeyPress" (VOID) NET		//TRIGGERED FROM KEYPRESS		//r31 was 301
{
	if(CheckInventory("IsModern") > 0)											//R28
	{																			//R28
	GiveInventory("Kicking",1);													//R28
	terminate;																	//r31
	}																			//R28
	else																		//R8
	{																			//R8
	if(CheckInventory("stamina") == 100)										//R8
		{																		//R8
		terminate;																//R8
		}																		//R8
	else
		{
		if(CheckInventory("Stamina") > 80)
			{
			Print(s:"Not Enough Stamina!");
			PlaySound(0,"Tired",2,1.0,FALSE,ATTN_NORM);
			terminate;
			}
		else
			{
			GiveInventory("Kicking",1);
			}
		}
	}
}

#libdefine PLAYER_VIEWHEIGHT 50		//BD64 default player height
script "CheckIfCrouching"(void)		// New check for crouching
{
	if(GetActorViewHeight(0) <= PLAYER_VIEWHEIGHT / 2 << 16)
		SetResultValue(TRUE);
	else
		SetResultValue(FALSE);
}

Script "DM_SpawnACS" (VOID)	//R31 WAS 119
{
if	(GameType() == GAME_NET_DEATHMATCH)
	GiveInventory("IsDM",1);
}

script "SetBloodAmountACS" (void)		//R31 ADDED, REPLACES SCRIPT 799
{
SetResultValue(GetCVar("zdoombrutalblood"));
}

Script "LowBloodCheckerACS" (VOID)	//r31 was 798
{
if	(GetCvar("bd_lowgraphicsmode") == 1) {GiveInventory("LowGraphicsMode",1);}
if	(GetCvar("zdoombrutaljanitor") == 1) {GiveInventory("LowGraphicsMode",1);}
if	(GameType() == GAME_NET_DEATHMATCH) {GiveInventory("LowGraphicsMode",1);}		//R29 ADDED
terminate;
}

script "Zandro_Check" OPEN		//R31 WAS 822
{
if (GetCvar("isrunningzandronum") == 1)
	{
	ConsoleCommand("compat_clientssendfullbuttoninfo 1");
	}
}

//SPRINTING
script "Sprinting" ENTER		//	R31 WAS 851
{
if(CheckInventory("IsTacticalClass") == 1)		//r31 leads to terminates if not tacticalclass
	{
	int buttons;

	while (TRUE)
		{
		buttons = GetPlayerInput(-1, INPUT_BUTTONS);

		if ((buttons & BT_SPEED) && (buttons & BT_FORWARD) && !(buttons & BT_CROUCH))
			{
			GiveInventory("IsRunning",1);
			delay(1);
			}
		delay(1);
		TakeInventory("IsRunning",1);
		}
	}
	else			//r31 terminates if not tacticalclass
	terminate;
}

script "TacticalPlayerFasterACS" (void)		//r31 was 852
{
SetActorProperty(0,APROP_Speed,2.0);
delay (1);
}

script "TacticalPlayerSlowerACS" (void)		//r31 was 853
{
SetActorProperty(0,APROP_Speed,1.0);
delay (1);
}

//V2.5 SCRIPTS BELOW
script "VanillaMapChecker" ENTER												//R31 GIVES DUMMY ITEM ON MAP07 TO EXIT TO VANILLA MAP08
{
if	(GetCvar("VMapCheckCvar") == 0) {TakeInventory("VMapCheck",1);}
if	(GetCvar("VMapCheckCvar") == 1) {GiveInventory("VMapCheck",1);}
}

script "AbsolutionMapChecker" ENTER	//R31 GIVES DUMMY ITEM TO ACCESS MAP28A
{
if	(GetCvar("AbsMapCheckCvar") == 0) {TakeInventory("AbsMapCheck",1);}
if	(GetCvar("AbsMapCheckCvar") == 1) {GiveInventory("AbsMapCheck",1);}
}

script "TCMapChecker" ENTER														//R31 GIVES DUMMY ITEM ON MAP07 TO EXIT TO TC MAPS
{
if	(GetCvar("TCMapCheckCvar") == 0) {TakeInventory("TCMapCheck",1);}
if	(GetCvar("TCMapCheckCvar") == 1) {GiveInventory("TCMapCheck",1);}
}

script "VanillaWeapons" (void)													//R31 Vanilla weapon animations
{
SetResultValue(GetCVar("VWeaponCvar"));
}

script "GaussCannonRandom" (void)													//R31 Replaces 1485
{
SetResultValue(GetCVar("GaussCannon_Spawner_Cvar"));
}

script "BFGRandom" (void)													//R31 Replaces 1486
{
SetResultValue(GetCVar("BFG_Spawner_Cvar"));
}

script "WpnPowerRandom" (void)													//R31 Replaces 1478
{
SetResultValue(GetCVar("WpnPower_Spawner_Cvar"));
}

script "NImpRandom" (void)														//R31 Replaces 1490
{
SetResultValue(GetCVar("NImp_Spawner_Cvar"));
}

script "NSpectreRandom" (void)													//R31 Replaces 1491
{
SetResultValue(GetCVar("NSpectre_Spawner_Cvar"));
}

script "NCacoRandom" (void)														//R31 Replaces 1492
{
SetResultValue(GetCVar("NCaco_Spawner_Cvar"));
}

script "HellHoundRandom" (void)													//R31 Replaces 1493
{
SetResultValue(GetCVar("Hellhound_Spawner_Cvar"));
}

script "AnnihilatorRandom" (void)												//R31 Replaces 1494
{
SetResultValue(GetCVar("Annihilator_Spawner_Cvar"));
}

script "MotherDemonRandom" (void)												//R31 Replaces 1495
{
SetResultValue(GetCVar("Motherdemon_Spawner_Cvar"));
}

script "ArchvileRestorer" (void)												//R31 Replaces 1479
{
SetResultValue(GetCVar("ArchvileRestorerCvar"));
}

script "HoundChooserACS" (void)													//R31 new choice between old and new hellhound
{
SetResultValue(GetCVar("HoundChooserCvar"));
}

script "RevenantChooserACS" (void)												//R31 new choice between old and new Revenant
{
SetResultValue(GetCVar("RevenantChooserCvar"));
}

script "D64MonstersOnlyReplacer" (void)											//R31 Replaces 1481
{
SetResultValue(GetCVar("D64MonstersOnlyCvar"));
}

script "Light_Fog_Remover" (void)												//R31 Replaces 17002
{
SetResultValue(GetCVar("LFog_Cvar"));
}

script "Flat_Decal_Remover" (void)												//R31 Replaces 17001
{
SetResultValue(GetCVar("FloorDecal_Cvar"));
}

script "SoulHandler" ENTER			//r31 part of soulammo spawn
{
	Thing_ChangeTID(0,2337+PlayerNumber());	//was 1337
}

Script "TUnmakerChecker" (void)		//r31 checks if you have tactical unmaker
{
	for(int i = 2337; i < 2400; i++)	//was 1337,< 1400
	{
		if(CheckActorInventory(i,"UnmakerTACTICAL") && CheckActorInventory(i,"WpnPower1Icon") && CheckActorInventory(i,"WpnPower2Icon") && CheckActorInventory(i,"WpnPower3Icon"))		//r31 checks if you have tactical unmaker & demon keys
		{
			SetResultValue(3);
			break;
		}
		if(CheckActorInventory(i,"UnmakerTACTICAL"))		//r31 checks if you have tactical unmaker
		{
			SetResultValue(2);
			break;
		}
	}
}

Script "AlternativeRifleSkin" (void) //r31 added alternative rifle skin
{
SetResultValue(getCvar("AlternativeRifleSkinCvar"));
}

Script "AlternativeLaserSkin" (void) //r31 added alternative Laser skin
{
SetResultValue(getCvar("AlternativeLaserSkinCvar"));
}

script "SSGZombieRandomACS" (void)	//R31 added
{
SetResultValue(GetCVar("SSGZombieRandom_Cvar"));
}

script "SSGinDoom1" (void)	//R31 added
{
SetResultValue(GetCVar("SSGinDoom1_Cvar"));
}

script "ZMarineRandomACS" (void)
{
SetResultValue(GetCVar("ZMarineRandom_Cvar"));
}

script "ZombieBFGRandomACS" (void)
{
SetResultValue(GetCVar("ZombieBFGRandom_Cvar"));
}

script "AcidDemonRandomACS" (void)	//R31 added
{
SetResultValue(GetCVar("AcidDemonRandom_Cvar"));
}

script "ChaingunRandomACS" (void)	//R31 added
{
SetResultValue(GetCVar("Chaingun_Spawner_Cvar"));
}

Script "ClassicRLACS" (void) //r31 added
{
SetResultValue(getCvar("ClassicRLCvar"));
}

Script "AlternativeAmmoPickupSpritesACS" (void) //r31 added alternative ammo pickup
{
SetResultValue(getCvar("AlternativeAmmoPickupSpritesCvar"));
}

Script "BerserkSwitchFistsACS" (void) //r31 added option to restore fist switch on berserk
{
SetResultValue(getCvar("BerserkSwitchFistsCvar"));
}

script "StalkerRandomACS" (void)	//R31 added
{
SetResultValue(GetCVar("StalkerRandom_Cvar"));
}

script "NightCrawlerRandomACS" (void)	//R31 added
{
SetResultValue(GetCVar("NightCrawlerRandom_Cvar"));
}

script "FootStepCheck" (void)	//R31 added for footstep sounds
{
SetResultValue(GetCVar("FootStepCheckCvar"));
}

script "CensoredHealing_ACS" (void)	//R31 added to switch to censored healing sprites
{
SetResultValue(GetCVar("CensoredHealing_Cvar"));
}

script "BruiserRandom_ACS" (void)	//R31 added
{
SetResultValue(GetCVar("BruiserRandom_Cvar"));
}

script "PainStalkerRandomACS" (void)	//R31 added for pain elemantal stalker attack
{
SetResultValue(GetCVar("PainStalkerRandom_Cvar"));
}

Script "VanillaHUDSwitching" ENTER	//option to set vanilla normal HUD
{
if(GetUserCvar(0,"VanillaStatusBarCvar") == 1) {GiveInventory("VanillaSBar",1);}
if(GetUserCvar(0,"VanillaStatusBarCvar") == 0) {TakeInventory("VanillaSBar",1);}
Delay(35);
Restart;
}

Script "VanillaChainsawACS" ENTER 	//option to set vanilla Chainsaw
{
if (CheckInventory("64ChainsawTACTICAL") == 1 && GetCvar("VanillaChainsawCvar") == 1)
	{
	SetAmmoCapacity("SawGas",700);
	GiveInventory("64ChainsawTACTICAL_Classic",1);
	TakeInventory("64ChainsawTACTICAL",1);
	TakeInventory("SawGas",100);
	SetAmmoCapacity("SawGas",600);
	}
if (CheckInventory("64ChainsawTACTICAL_Classic") == 1 && GetCvar("VanillaChainsawCvar") == 0)
	{
	SetAmmoCapacity("SawGas",700);
	GiveInventory("64ChainsawTACTICAL",1);
	TakeInventory("64ChainsawTACTICAL_Classic",1);
	TakeInventory("SawGas",100);
	SetAmmoCapacity("SawGas",600);
	}
if (CheckInventory("64ChainsawMODERN") == 1 && GetCvar("VanillaChainsawCvar") == 1)
	{
	GiveInventory("64ChainsawMODERN_Classic",1);
	TakeInventory("64ChainsawMODERN",1);
	}
if (CheckInventory("64ChainsawMODERN_Classic") == 1 && GetCvar("VanillaChainsawCvar") == 0)
	{
	GiveInventory("64ChainsawMODERN",1);
	TakeInventory("64ChainsawMODERN_Classic",1);
	}
Delay(40);
Restart;
}

script "ClassicCSAWCheck" (void)	//cvar check for chainsaw pickup
{
SetResultValue(GetCVar("VanillaChainsawCvar"));
}

script "KnightmareRandom" (void)	//cvar check to random spawn knightmare from hellknight
{
SetResultValue(GetCVar("KnightmareRandomCvar"));
}

script "WeaponsWarmUpACS" (void)
{
SetResultValue(GetCVar("WeaponsWarmUpCvar"));
}

script "AlphaPickupACS" (void)
{
SetResultValue(GetCVar("AlphaPickupCvar"));
}

script "FloorCheck" (Void)
{
	if(GetActorZ(0) == GetActorFloorZ(0))
		SetResultValue(TRUE);
	else
		SetResultValue(FALSE);
}